<html><head>
<title>INFO 3300 - March 29</title>

  <link href="https://fonts.googleapis.com/css?family=Lato:400,700|Raleway:400,700" rel="stylesheet">

  <link rel="stylesheet" type="text/css" href="../css/normalize.css">
  <link rel="stylesheet" type="text/css" href="../css/skeleton.css">
  <link rel="stylesheet" type="text/css" href="../css/custom-style.css">

  <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.14.2/styles/default.min.css">
  <script src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.14.2/highlight.min.js"></script>
  <script src="https://d3js.org/d3.v6.min.js"></script>
  <script src="https://d3js.org/topojson.v3.min.js"></script>
  <style>
  
  .nation {
    fill: #ddd;
  }

  .outline {
    stroke: #fff;
    stroke-width: 1px;
    fill: none;
  }
    
  #legend span {
    margin-right: 10px;
  }
  

  </style>

</head>
<body>
  <div class="container larger">
  <h3>Prompt for March 29</h3>
  <p>
    For contour mapping (whether using geography or not), it's better to keep the <a href="https://github.com/topojson/topojson">TopoJSON</a> import around.
  </p>
  <p>
    More on <a href="https://github.com/d3/d3-contour">d3.contour</a>. Here is a <a href="https://observablehq.com/@d3/volcano-contours">contour example</a> and a <a href="https://observablehq.com/@d3/density-contours">density example</a>.
  </p>
  <p>
    In addition to the <a href="https://www.kaggle.com/datafiniti/fast-food-restaurants/data">fast food dataset</a> from Friday, today's data come from a subsample of a <a href="https://www.kaggle.com/madison88/201920-nhl-playbyplay-data">Kaggle dataset</a> of all recorded NHL game events for the 2019-2020 season.
  </p>


  <h5>HTML for today:</h5>
  
  <svg id="fastfood" height="610" width="975" style="background: #fff; margin-top:50px" >

  </svg>
    
  <!--- Hockey rink SVG >>> Each pixel is 0.25 feet --->
  <svg id="hockey" height="350" width="430" style="margin-top:70px" >
    
    <g id="contours" transform="translate(20,5)">
    </g>
        
    <g id="rink" transform="translate(20,5)">
      <line x1="1" x2="1" y1="2" y2="340" style="opacity:0.7;stroke:#aa1111;stroke-width:3;stroke-linecap:round;stroke-dasharray:5,5;"/>
      <line x1="100" x2="100" y1="0" y2="340" style="opacity:0.7;stroke:#224499;stroke-width:6;"/>
      <line x1="356" x2="356" y1="2" y2="338" style="opacity:0.7;stroke:#aa1111;stroke-width:3;"/>
      <path d="M356,158 L338,158 a24,24 1 0,0 0,24 L356,182" style="opacity:0.7;fill:#224499;stroke:#aa1111;stroke-width:3;"/>
      <rect x="-400" y="0" width="800" height="340" rx="56" ry="56" style="fill:none;stroke-width:4;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke:#000;"/>
    </g>

  </svg>
  <div id="legend"> </div>
  
  

  <!-- This block will be automatically filled with syntax-highlighted code from the script below -->
  <h5>Code for today:</h5>
  <pre>
    <code id="display1" class="hljs javascript">
    </code>
    <code id="display2" class="hljs javascript">
    </code>
  </pre>


  <script id="notes1">
  // Fast food map
  const ffsvg = d3.select("#fastfood");
  const ffwidth = ffsvg.attr("width");
  const ffheight = ffsvg.attr("height");
  const ffmapWidth = ffwidth;
  const ffmapHeight = ffheight;
  // No margins here since our US map already has a specific projection to match to size
  const ffmap = ffsvg.append("g");

  const requestData1 = async function() {
    
    // We'll use the same map and projection as in the 03-26 notes
    const us = await d3.json("../datasets/counties-10m.json");
    const fastfood = await d3.csv("../datasets/fastfood.csv", d3.autoType);
    const projection = d3.geoAlbersUsa().scale(1300).translate([487.5, 305]);
    const path = d3.geoPath().projection(projection);
    const nation = topojson.feature(us, us.objects.nation);
    const statesMesh = topojson.mesh(us, us.objects.states);
    
    
    
    
    
    
    
    
    
    
    
    
    // // We can show the circles to see whether our densities are plausible
    // ffmap.selectAll("circle.dot").data(fastfood)
    //      .join("circle")
    //      .attr("class","dot")
    //      .attr("r", 2)
    //      .attr("fill", "darkgrey")
    //      .attr("opacity", 0.2)
    //      .attr("cx", d => d.position[0])
    //      .attr("cy", d => d.position[1]);
    
    
  }
  requestData1();
  
  </script>

  <script id="notes2">
  
  
  
  const requestData2 = async function() {
  
    // Now let's chart where different kinds of Hockey goals are attempted
    // Are slap shots attempted from different places than wrist shots?
    //  (hint: yes they are, and density contours can illustrate!)
    const layer = d3.select("#hockey g#contours");
    const data = await d3.csv("../datasets/nhl_goals_2019.csv", d3.autoType)
    
    
    
    
    
    
    
    // *Make a legend for all of the shot types*
    
    
  
  
  
  
  
  }
  requestData2();
  
  
  




  </script>








  <!--- calls the highlight library to fill the <pre> tag with code --->
  <script>
  document.getElementById("display1").innerText = document.getElementById("notes1").innerText;
  document.getElementById("display2").innerText = document.getElementById("notes2").innerText;
  hljs.initHighlightingOnLoad();
  </script>



  </div>
</body>
</html>
