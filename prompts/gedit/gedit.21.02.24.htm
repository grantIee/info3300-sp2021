<html><head>
<title>INFO 3300 - February 24</title>

  <link href="https://fonts.googleapis.com/css?family=Lato:400,700|Raleway:400,700" rel="stylesheet">

  <link rel="stylesheet" type="text/css" href="../css/normalize.css">
  <link rel="stylesheet" type="text/css" href="../css/skeleton.css">
  <link rel="stylesheet" type="text/css" href="../css/custom-style.css">

  <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.14.2/styles/default.min.css">
  <script src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.14.2/highlight.min.js"></script>
  <script src="https://d3js.org/d3.v5.min.js"></script>

  <style>
  </style>

</head>
<body>
  <div class="container larger">
  <h3>Prompt for February 24</h3>
  <p>
  	<a href="https://d3js.org/">D3</a> is a library that makes it easy to create and manipulate page elements. It's not restricted to SVG elements, but that's what we'll usually use it for. We'll start by using d3 to select DOM elements, create new elements, and modify the content and appearance of elements.
  </p>
  <p>
    You can find a bunch of D3 examples <a href="https://github.com/d3/d3/wiki/Gallery">here</a> and access <a href="https://github.com/d3/d3/blob/master/API.md">D3's online API reference</a>.
  </p>

  <h5>HTML for today:</h5>

  <svg id="all" height="400" width="400" style="background: #F5F5F5">
    <!--- We're going to be populating this dynamically today --->
  </svg>
  <br/>
  <svg id="male" height="400" width="300" style="background: #F5F5FF">
    <!--- We're going to be populating this dynamically today --->
  </svg>
  <svg id="female" height="400" width="300" style="background: #FFF5F5">
    <!--- We're going to be populating this dynamically today --->
  </svg>


  <!-- Overview first -->


  <!-- This block will be automatically filled with syntax-highlighted code from the script below -->
  <h5>Code for today:</h5>
  <pre>
    <code id="display" class="hljs javascript">
    </code>
  </pre>

  <!--- Code for today's class --->
  <script id="notes">
  // First, some data ( "binned" data of Titanic passengers ):
  passengers = [{"age": 0, "lived": 21, "died": 13}, {"age": 5, "lived": 21, "died": 11}, {"age": 10, "lived": 12, "died": 16}, {"age": 15, "lived": 27, "died": 33}, {"age": 20, "lived": 64, "died": 115}, {"age": 25, "lived": 67, "died": 104}, {"age": 30, "lived": 132, "died": 285}, {"age": 35, "lived": 46, "died": 62}, {"age": 40, "lived": 28, "died": 57}, {"age": 45, "lived": 23, "died": 39}, {"age": 50, "lived": 27, "died": 25}, {"age": 55, "lived": 15, "died": 17}, {"age": 60, "lived": 11, "died": 16}, {"age": 65, "lived": 4, "died": 10}, {"age": 70, "lived": 0, "died": 5}, {"age": 75, "lived": 1, "died": 1}, {"age": 80, "lived": 1, "died": 0}];

  passengersFemale = [{"age": 0, "lived": 10, "died": 6}, {"age": 5, "lived": 12, "died": 3}, {"age": 10, "lived": 5, "died": 8}, {"age": 15, "lived": 23, "died": 5}, {"age": 20, "lived": 48, "died": 21}, {"age": 25, "lived": 42, "died": 14}, {"age": 30, "lived": 83, "died": 47}, {"age": 35, "lived": 35, "died": 5}, {"age": 40, "lived": 21, "died": 7}, {"age": 45, "lived": 17, "died": 6}, {"age": 50, "lived": 18, "died": 2}, {"age": 55, "lived": 11, "died": 1}, {"age": 60, "lived": 9, "died": 1}, {"age": 65, "lived": 4, "died": 1}, {"age": 70, "lived": 0, "died": 0}, {"age": 75, "lived": 1, "died": 0}, {"age": 80, "lived": 0, "died": 0}];

  passengersMale = [{"age": 0, "lived": 11, "died": 7}, {"age": 5, "lived": 9, "died": 8}, {"age": 10, "lived": 7, "died": 8}, {"age": 15, "lived": 4, "died": 28}, {"age": 20, "lived": 16, "died": 94}, {"age": 25, "lived": 25, "died": 90}, {"age": 30, "lived": 49, "died": 238}, {"age": 35, "lived": 11, "died": 57}, {"age": 40, "lived": 7, "died": 50}, {"age": 45, "lived": 6, "died": 33}, {"age": 50, "lived": 9, "died": 23}, {"age": 55, "lived": 4, "died": 16}, {"age": 60, "lived": 2, "died": 15}, {"age": 65, "lived": 0, "died": 9}, {"age": 70, "lived": 0, "died": 5}, {"age": 75, "lived": 0, "died": 1}, {"age": 80, "lived": 1, "died": 0}];

  // --- 1. Let's make a doubled histogram of all passengers on the Titanic
  let svg = d3.select("svg#all");
  let width = svg.attr("width");
  let height = svg.attr("height");

  let maxMortality = d3.max(passengers, (d) => {
    return Math.max(d['lived'], d['died']) ;
  } )

  let ageScale = d3.scaleLinear()
                    // the input array [min, max]
                    // output pixel values
                    // null gives it min pixel value
                    // undefined and nan gives undefined back
                   .domain([0,80])
                   .range([10,width - 10]);

  let livedScale = d3.scaleLinear()
                   .domain([0,maxMortality])
                   .range([0,height / 2.0 - 10]);

  // Using lines for bars
  passengers.forEach( (d,i) => {

    svg.append("line")
       .attr("x1", ageScale( d['age'] ) )
       .attr("x2", ageScale( d['age'] ) )
       .attr("y1", height / 2.0)
       .attr("y2", height / 2.0 - livedScale( d['lived'] ) )
       .style("stroke", "#5555F0")
       .style("stroke-width", "10");



  });

  // --- 2. What about deaths? (oop, things are getting pretty dark)

  let diedScale = d3.scaleLinear()
                    .domain([0,maxMortality])
                    .range([0, height/2.0 - 10])


  passengers.forEach( (d,i) => {

    svg.append("line")
       .attr("x1", ageScale( d['age'] ) )
       .attr("x2", ageScale( d['age'] ) )
       .attr("y1", height / 2.0)
       .attr("y2", height / 2.0 + diedScale( d['died'] ) )
       .style("stroke", "#F05555")
       .style("stroke-width", "10");

  });

  passengers.forEach( (d, i) => {

    //svg.append("text")
    //   .text( d['age'] )
    //   .style("font-size", "15px")
    //   .style("text-anchor", "middle")
    //   .attr("x", ageScale( d['age'] ))
    //   .attr("y", 20)

    svg.append("text")
       .text( d['age'] )
       .style("font-size", "15px")
       .style("text-anchor", "middle")
       .attr("x", ageScale( d['age'] ))
       .attr("y", height/2.0 - livedScale( d['lived'] ) - 10)
  });


  // --- 3. Let's break the data down by gender now!

  passengersMale.forEach ( (d) => {
    if( (d.lived + d.died) < 1) {
        d.percentSurvived = 0;
      }
    else {
    d['percentSurvived'] = d['lived'] / (d['lived'] + d['died']);
    }
  });

  passengersFemale.forEach ( (d) => {
    if( (d.lived + d.died) < 1) {
        d.percentSurvived = 0;
      }
    else {
    d.percentSurvived = d.lived / (d.lived + d.died);
    }
  });


  svg = d3.select("svg#male");
  width = svg.attr("width");
  height = svg.attr("height");


  svg.append("text").text("Male Passengers").attr("x",10).attr("y",20).style("font-size","15px");

  ageScale = d3.scaleLinear()
               .domain([0,80])
               .range([10, width-10]);

  percentScale = d3.scaleLinear()
                   .domain([0,1])
                   //.range([max, min]);
                   .range([height - 10, 30]);

  let colorScale = d3.scaleLinear()
                     .domain([0,1])
                     .range(['navy', 'turquoise'])
                     .interpolate( d3.interpolateHcl );

  passengersMale.forEach( (d) => {

    svg.append("line")
       .attr("x1", ageScale( d['age'] ) )
       .attr("x2", ageScale( d['age'] ) )
       .attr("y1", height-10)
       .attr("y2", percentScale( d.percentSurvived ) )
       .style("stroke", colorScale( d.percentSurvived ) )
       .style("stroke-width", "10");

    svg.append("text")
       .text( d['age'] )
       .style("font-size", "10px")
       .style("text-anchor", "middle")
       .attr("x", ageScale( d['age'] ))
       .attr("y", percentScale(d.percentSurvived ) - 10)
  });




  svg = d3.select("svg#female");
  width = svg.attr("width");
  height = svg.attr("height");
  svg.append("text").text("Female Passengers").attr("x",10).attr("y",20).style("font-size","15px");


  ageScale = d3.scaleLinear()
               .domain([0,80])
               .range([10, width-10]);

  percentScale = d3.scaleLinear()
                   .domain([0,1])
                   //.range([max, min]);
                   .range([height - 10, 30]);

  colorScale = d3.scaleLinear()
                     .domain([0,1])
                     .range(['navy', 'turquoise'])
                     .interpolate( d3.interpolateHcl );

  passengersFemale.forEach( (d) => {

    svg.append("line")
       .attr("x1", ageScale( d['age'] ) )
       .attr("x2", ageScale( d['age'] ) )
       .attr("y1", height-10)
       .attr("y2", percentScale( d.percentSurvived ) )
       .style("stroke", colorScale( d.percentSurvived ) )
       .style("stroke-width", "10");

    svg.append("text")
       .text( d['age'] )
       .style("font-size", "10px")
       .style("text-anchor", "middle")
       .attr("x", ageScale( d['age'] ))
       .attr("y", percentScale(d.percentSurvived ) - 10)
  });



  </script>


  <!--- calls the highlight library to fill the <pre> tag with code --->
  <script>
  document.getElementById("display").innerText = document.getElementById("notes").innerText;
  hljs.initHighlightingOnLoad();
  </script>


  <!--- This is what our dataset looks like:

[
  {
    "age": 0,
    "lived": 21,
    "died": 13
  },
  {
    "age": 5,
    "lived": 21,
    "died": 11
  },
  {
    "age": 10,
    "lived": 12,
    "died": 16
  },
  {
    "age": 15,
    "lived": 27,
    "died": 33
  },
  {
    "age": 20,
    "lived": 64,
    "died": 115
  },
  {
    "age": 25,
    "lived": 67,
    "died": 104
  },
  {
    "age": 30,
    "lived": 132,
    "died": 285
  },
  {
    "age": 35,
    "lived": 46,
    "died": 62
  },
  {
    "age": 40,
    "lived": 28,
    "died": 57
  },
  {
    "age": 45,
    "lived": 23,
    "died": 39
  },
  {
    "age": 50,
    "lived": 27,
    "died": 25
  },
  {
    "age": 55,
    "lived": 15,
    "died": 17
  },
  {
    "age": 60,
    "lived": 11,
    "died": 16
  },
  {
    "age": 65,
    "lived": 4,
    "died": 10
  },
  {
    "age": 70,
    "lived": 0,
    "died": 5
  },
  {
    "age": 75,
    "lived": 1,
    "died": 1
  },
  {
    "age": 80,
    "lived": 1,
    "died": 0
  }
]


  --->


  </div>
</body>
</html>
